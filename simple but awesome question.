problem link:

https://codeforces.com/contest/1349/problem/B

editorial link:
some future step predictions.
https://codeforces.com/blog/entry/77284

my solution.

#include <bits/stdc++.h>
using namespace std;
#define ll long long int

#define vl vector<ll>
#define vi vector<int>

#define ff first
#define ss second

#define pb push_back
#define MOD 1e9+7 
const int nax = 1e6+5;
#define display(v) for(int i =0;i<v.size();++i)cout << v[i] << " "

inline ll add(ll a, ll b){ ll c = a + b; if(c > MOD) c -= MOD; return c; }

int main()
 {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t;  cin>>t;
    while(t--){
        ll n,k;
        cin>>n>>k;
        vl v(n);
        int cnt = 0;
        for(int i  =0;i<n;++i){
            cin>>v[i];
            if(v[i] == k){
                cnt++;
                v[i] = 0;
            }
            else if(v[i] > k){
                v[i] = 1;
            }
            else{
                v[i] = -1;
            }
        }
        
        if(cnt == 0){
            cout << "no\n";
            continue;
        }
        if(n==1){
            cout << "yes\n";
            continue;
        }
        bool ok = false;
        for(int i=0;i<n-1;++i){
            ok |= (v[i]>=0 && v[i+1]>=0);
        }
        for(int i =0;i<n-2;++i){
            ok |= (v[i]>=0 && v[i+2]>=0);
        }
        if(ok)cout << "yes\n";
        else cout << "no\n";
    }

    

     return 0;
 }


////////////////////////////////////////////////////////////////////////////////////

question :
we are supposed to choose a interval such that if we remove max element remaining sum is maximum.



my thoughts :
key point is the element of the array. it's -31 to 31.
initial step.
   we set a upper limit on removeable element.
   if the value in the array is graeter than upper limit then we will start again.
   otherwise we do this:
        sum of previous range .
        max of that range 
        and the sum we want to discard .
             discard the sum means :-> previously if we encounter a phase where sum beacame -ve then we don't want to consider that.
             so in running sum we add that sum -(discard) , discard is -ve so ultimetly we are adding it.

question link :
https://codeforces.com/contest/1359/problem/D

solution Link:
https://codeforces.com/contest/1359/submission/81811564


------------------------------------------------------------------------------------------------------------------------------

question Link :
https://codeforces.com/contest/1389/problem/D

Editorial Link :
https://www.youtube.com/watch?v=RYVTRb5H6Jw&t=2753s

solution Link :
https://codeforces.com/contest/1389/submission/88401813
------------------------------------------------------------------------------------------------------------------------------



problem Link : 
https://codeforces.com/contest/1435/problem/C

solution Link : 
https://codeforces.com/contest/1435/submission/98228888

Related : 
n linked list are given find the minimum interval in which every linked list have at least one element.

--------------------------------------------------------------------------------------------------------------------------------

Problem Link : 
https://codeforces.com/contest/1435/problem/D

solution Link :
https://codeforces.com/contest/1435/submission/98225497

Thoughts : stack problem..
- (insert into the stack.)
Danger : value can not be bigger than top of the stack..

+ pop the stack and use this number as your permutation.
Danger : if stack is empty.
----------------------------------------------------------------------------------------------------------------

Problem Link :
https://codeforces.com/contest/1451/problem/C

Editorial Link  :
https://codeforces.com/blog/entry/84885     (c - string equality).

Thoughts :
swap it means we can get any possible configuration after some number of swaps.
Before swapping if we make all the freq equal to freq of b.(i mean freq. of characters.)
if we are unable to do this then answer is no.
otherwise Yes.

Solution :
https://codeforces.com/contest/1451/submission/99230229
----------------------------------------------------------------------------------------------------------------
             
 
 

