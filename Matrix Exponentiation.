Spoj problem .

Power Of matrix .
https://www.spoj.com/problems/MPOW/

video Editorial :
https://www.youtube.com/watch?v=d8xB9jgEu-A

Code :

// power of matrix -> matrix exponentiation
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
 
#define vl vector<ll>
#define vi vector<int>
 
#define ff first
#define ss second
 
#define pb push_back
#define pri pair<int,int>
#define MOD 1000000007
const int nex = 1e6+5;
#define inf 4e18
 
#define display(v) for(int i =0;i<(int)v.size();++i)cout << v[i] << " "
#define all(v) v.begin(),v.end()
ll sqr(ll x){return x*x;}
inline ll add(ll a, ll b){ ll c = a + b; if(c >= MOD) c -= MOD; return c; }
inline ll mu(ll a, ll b){ return (a * 1ll * b) % MOD; }
inline ll sub(ll a, ll b){ ll c = a - b; if(c < 0) c += MOD; return c; }
const int nax = 1000*1000 + 5;
const int N = 55;
ll ar[N][N] , I[N][N];

void mul(ll A[][N] , ll B[][N] , int m){
	
	ll res[N][N];
	for(int i = 1;i<=m;++i){
		for(int j = 1;j<=m;++j){
			res[i][j] = 0;
			for(int k = 1;k<=m;++k){
				res[i][j] = add(res[i][j] , mu(A[i][k],B[k][j]));
			}
		}
	}
	
	for(int i = 1;i<=m;++i){
		for(int j=1;j<=m;++j){
			A[i][j] = res[i][j];
		}
	}
}

void matPower(ll A[][N],int m,int n){
	for(int i= 1;i<=m;++i){
		for(int j = 1;j<=m;++j){
			if(i == j)I[i][j] = 1;
			else I[i][j] = 0;
		}
	}
	
	while(n > 0){
		if(n%2)
			mul(I,A,m),--n;
		else
			mul(A,A,m),n/=2;	
	}
	
	for(int i = 1;i<=m;++i){
		for(int j = 1;j<=m;++j){
			ar[i][j] = I[i][j];
		}
	}
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t; cin>>t;
    while(t--){
    	int m,n; cin>>m>>n;  // m -dimention
    	for(int i = 1;i<=m;++i){
    		for(int j = 1;j<=m;++j)
    			cin>>ar[i][j];
		}
		matPower(ar,m,n);
		for(int i =1;i<=m;++i){
			for(int j = 1;j<=m;++j){
				cout << ar[i][j] << " ";
			}
			cout << "\n";
		}
    	
	}
 
	
	return 0;
}

----------------------------------------------------------------------------------------------------

Nth element of recurrance relation : (Log(n)).



