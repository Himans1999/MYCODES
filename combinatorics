my weak topic :

problem :
https://codeforces.com/contest/1359/problem/E

my thoughts:

the modulo will remain stable if and only if all the element in the array are divisible by lowest element.
i.e. we fix a element (smallest one)
and then inrange n there will be (n/i - 1) elements will be there which are divisble by i. ( i lowest element)
then we have to select only k-1 elements (k size of the array)

solution link :

https://codeforces.com/contest/1359/submission/81824373



...............................................................................................................

problem link :
https://codeforces.com/contest/1139/problem/C

my thoughts :
very simple to figure out .

solution link :
https://codeforces.com/contest/1139/submission/84351549


------------------------------------------------------------------------------------------------------------------

problem LINK:

https://atcoder.jp/contests/abc171/tasks/abc171_f

THOUGHTS :
reverse thinking .
we need to find all the string having (|s| + k) char and have string str as its subsequence.
all possible strings (26)^N  N -> |s| + k.
we will remove all possibilities where the string doesn't contain Str as a subs.
let m is the longest length of prefix which is the subs.
from 0 to |s| - 1 if we walk through we will get that for m places character is fixed.
for (n-m) places character can be 25 possible . because we don't want to increse the length of prefix.
it should not exceed length m.



EDITORIAL LINK:
https://codeforces.com/blog/entry/79153

solution link :

https://atcoder.jp/contests/abc171/submissions/14718036
------------------------------------------------------------------------------------------------------------------

counting problem.

https://atcoder.jp/contests/abc173/tasks/abc173_f

Thought :

it's easy to count all possible maximum answer.

pairs of 1s + pairs of 2s + pairs of 3s.

and then subtract ..

how to subtract.
 if( u, v) u<v
edge is there . it means we have to subtract something from the answer.
something -->> no of set in which this pair appears.
how to find them
(min(u,v)) * ( n - max(u,v) + 1) 

2 , 4
{1,2,3,4}, ...... all after this}
{2,3,4}  ,  ............all after this}

min(u,v) is the count how many times it comes. -> and number of sets in which both of them appears. (n - mx + 1) (5-4+1) (4, 5)

solution Link :

https://atcoder.jp/contests/abc173/submissions/15020466
-----------------------------------------------------------------------------------------------------------------------------------------

Question :
https://codeforces.com/contest/1189/problem/E

Editorial :
https://codeforces.com/blog/entry/68079

Solution :
https://codeforces.com/contest/1189/submission/93145178

-----------------------------------------------------------------------------------------------------------------------------------------

Questions :
https://codeforces.com/contest/1288/problem/C
(star and bars increasing order.)

Question Marbal on spoj.

Editorial :
https://youtu.be/v069aWK21wA
(series .)
--------------------------------------------------------------------------------------------------------------------------------------------

Problem :

JoJo's mentor Lisa Lisa told him and Caesar to solve the following problem to prepare him for battle with the Pillar Men. Help them out.
You are given three integers N, M and K.
Find the number of sequences A1,A2,…,AN such that:

For each valid i, Ai is an integer in the range [0,M−1].
Let's define N prefix sums of A as Si=sum of first i elements of A, where 1≤i≤N. At least K of these prefix sums are divisible by M.
The answer could be really large, so you should compute it modulo 10^9+7.



Editorial :
if we consider a transition from index i to (i+1).
we can always make it (%m = 0). as we have privilege to add any number [0 .. m-1].

we won't deal with the sum but the modulo.
now at least k things. 
k time %=0 .  nC(k) * (m-1)^(n-k).
(k+1) times %=0  nC(k+1) * (m-1)^(n-(k+1)).

..  so on.


answer :

for(int i = k;i<=n;++i){
   val += nCi * (m-1)^(n-i);
}
Modulos and all.
------------------------------------------------------------------------------------------------------------------

