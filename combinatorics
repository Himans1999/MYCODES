my weak topic :

problem :
https://codeforces.com/contest/1359/problem/E

my thoughts:

the modulo will remain stable if and only if all the element in the array are divisible by lowest element.
i.e. we fix a element (smallest one)
and then inrange n there will be (n/i - 1) elements will be there which are divisble by i. ( i lowest element)
then we have to select only k-1 elements (k size of the array)

solution link :

https://codeforces.com/contest/1359/submission/81824373



...............................................................................................................

problem link :
https://codeforces.com/contest/1139/problem/C

my thoughts :
very simple to figure out .

solution link :
https://codeforces.com/contest/1139/submission/84351549


------------------------------------------------------------------------------------------------------------------

problem LINK:

https://atcoder.jp/contests/abc171/tasks/abc171_f

THOUGHTS :
reverse thinking .
we need to find all the string having (|s| + k) char and have string str as its subsequence.
all possible strings (26)^N  N -> |s| + k.
we will remove all possibilities where the string doesn't contain Str as a subs.
let m is the longest length of prefix which is the subs.
from 0 to |s| - 1 if we walk through we will get that for m places character is fixed.
for (n-m) places character can be 25 possible . because we don't want to increse the length of prefix.
it should not exceed length m.



EDITORIAL LINK:
https://codeforces.com/blog/entry/79153

solution link :

https://atcoder.jp/contests/abc171/submissions/14718036
------------------------------------------------------------------------------------------------------------------

counting problem.

https://atcoder.jp/contests/abc173/tasks/abc173_f

Thought :

it's easy to count all possible maximum answer.

pairs of 1s + pairs of 2s + pairs of 3s.

and then subtract ..

how to subtract.
 if( u, v) u<v
edge is there . it means we have to subtract something from the answer.
something -->> no of set in which this pair appears.
how to find them
(min(u,v)) * ( n - max(u,v) + 1) 

2 , 4
{1,2,3,4}, ...... all after this}
{2,3,4}  ,  ............all after this}

min(u,v) is the count how many times it comes. -> and number of sets in which both of them appears. (n - mx + 1) (5-4+1) (4, 5)

solution Link :

https://atcoder.jp/contests/abc173/submissions/15020466
-----------------------------------------------------------------------------------------------------------------------------------------

Question :
https://codeforces.com/contest/1189/problem/E

Editorial :
https://codeforces.com/blog/entry/68079

Solution :
https://codeforces.com/contest/1189/submission/93145178

-----------------------------------------------------------------------------------------------------------------------------------------

Questions :
https://codeforces.com/contest/1288/problem/C
(star and bars increasing order.)

Question Marbal on spoj.

Editorial :
https://youtu.be/v069aWK21wA
(series .)
--------------------------------------------------------------------------------------------------------------------------------------------

Problem :

JoJo's mentor Lisa Lisa told him and Caesar to solve the following problem to prepare him for battle with the Pillar Men. Help them out.
You are given three integers N, M and K.
Find the number of sequences A1,A2,…,AN such that:

For each valid i, Ai is an integer in the range [0,M−1].
Let's define N prefix sums of A as Si=sum of first i elements of A, where 1≤i≤N. At least K of these prefix sums are divisible by M.
The answer could be really large, so you should compute it modulo 10^9+7.



Editorial :
if we consider a transition from index i to (i+1).
we can always make it (%m = 0). as we have privilege to add any number [0 .. m-1].

we won't deal with the sum but the modulo.
now at least k things. 
k time %=0 .  nC(k) * (m-1)^(n-k).
(k+1) times %=0  nC(k+1) * (m-1)^(n-(k+1)).

..  so on.


answer :

for(int i = k;i<=n;++i){
   val += nCi * (m-1)^(n-i);
}
Modulos and all.
------------------------------------------------------------------------------------------------------------------

Problem Link :
https://codeforces.com/gym/306143/problem/D

Tutorial :

For each range we can find out the number of integers which are multiple of prime p.

[l , r]  number of divisors in range [l  , r] = (r / p) - ((l+p-1)/p) + 1;

In other words  = floor(r/p) - ceil(l/p) + 1.

Numbers which are not multiple of p -> (r - l + 1) - divisor .
In other words = total - divisors.

Now we solve this question pairwise.

All possible configuration =  multiply from 0 to n (r[i] - l[i]  + 1).

(i , (i+1)%n)   
-> we have to find the number of pairs who win the 1000 $.
(
(number of divisors at index i) * (number of divisors at index (i+1)%n) 
			+
(number of divisors at index i)*(number of non - divisors at index j)
			+
(number of non - divisors at index i)*(number of divisors at index j)
) * (all configurations at other indices).


All configuration at other indices = total  / (r[i] - l[i] + 1)*(r[(i+1)%n] - l[(i+1)%n] + 1).


But this will surely be a case of double overflow.
At last we have to divide everything by total.


At each step we try to divide it by total . 

Total of all configuration at other indices which is being multiplied at each step will be cancelled out and effectively we have to divide only by (r[i] - l[i] + 1)*(r[(i+1)%n] - l[(i+1)%n] + 1).


Sum over 0 to n  -> 
(
(number of divisors at index i) * (number of divisors at index (i+1)%n) 
			+
(number of divisors at index i)*(number of non - divisors at index j)
			+
(number of non - divisors at index i)*(number of divisors at index j)
) / (r[i] - l[i] + 1)*(r[(i+1)%n] - l[(i+1)%n] + 1).


This is the number of pairs at index i which will be awarded 1000 $ each.

Multiply this factor with 2000 $.

Ans this is the answer to this question.




Solution Link : 
https://codeforces.com/gym/306143/problem/D
---------------------------------------------------------------------------------------------------------------------------------


Combinatorics with simple dp.


problem Link : 
https://codeforces.com/gym/306143/problem/E

Tutorial : 

one can think about pure combinatorics. (kind of formulas and all.)
But thinking in terms of dp will reduce the previous calculation and we don't need to care about their order and all.

dp( i , j ) -> upto i person went on the escalator in time j.

dp(1 , 1) = p.

and transitions are,
 

dp(i, j) = (front person of the queue walks on the escalator with probability p )+( he stay there.  with probability (1- p));

dp(i , j) = p*(dp(i-1 , j-1)) + (1-p)*(dp(i , j - 1)).





Solution Link :
https://codeforces.com/gym/306143/submission/100522185
----------------------------------------------------------------------------------------------------------------------------------------

Problem Link : 
https://codeforces.com/gym/306143/problem/F
(galen colin probability stream.)

Idea : 
- edge between 2 same color is not possible.
- 2 nodes of same color should have a edge with a single node of different color (in this case we will find a path of length 2 between 2 same color nodes).
- now the only bridges are possible is -> (R , B) , (B , P ) , (R  , P).we have to take care of 2nd point . that 2 nodes should not have an edge with a single node.
- f( i , j) -> ith node we are working on and j nodes are available of 2nd color.
- now we just multiply all 3 things.

solution : 
https://codeforces.com/gym/306143/submission/102175816
----------------------------------------------------------------------------------------------------------------------------------------

Problem Link : 
https://codeforces.com/contest/1453/problem/D

Idea :
- at a particular point there are 2 options . -> go forward , stay at the same place.
- important observation : 1 -> Ex value . 2 .
- we need 2 tries . 1 pass and go forward , 2nd fail and remain at the same place cause it is the last activated checkpoint.
- whenever we encounter a check point -> we treat it as a separate  problem and can add tha previous answer.
- (10)  for 1 -> 2  , for 0 -> go forward 1 try .   fail and go to 1 -> 1 more try . and from 1 again go to 0. -> 2 try.
 -  2 + 1 + 1 + 2 -> (2 + 4) tries.  4 -> stay at the 0.
- (100) same way . 2 + 4 + 8. ... and so on

Solution : 
https://codeforces.com/contest/1453/submission/102382130
--------------------------------------------------------------------------------------------------------------------------------------

Problem Link : 
https://codeforces.com/gym/307293/problem/I

Idea : 
- there are y places.   x  = p1^k1 * p2^k2 * ... 
- power of each prime should be divided in y blocks.
- it is standard stars and bars concept.    
- mul(  (ki + y - 1)C( y - 1))  ) 
- now -ve numbers are also available .
- 2^(y-1) for 1st y places and according we will place sign of last place. 
- if there are odd number of -ve sign upto the place (y-1) -> we will set -ve sign.
- other wise +ve sign.
- answer : 2^(y-1) * mul(   (ki + y - 1)C( y - 1))  ).


Solution : 
https://codeforces.com/gym/307293/submission/102391523
--------------------------------------------------------------------------------------------------------------------------------------

