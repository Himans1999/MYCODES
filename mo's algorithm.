const int N = 2e5 + 5;
const int Q = 2e5 + 5;
const int M = 1e6 + 5;
const int sz = sqrt(N) + 1;

struct query{
    int l,r,id;
} qr[Q];

int n,q,a[N];
int freq[M];
ll ans[Q];
ll cur = 0;

bool rule(struct query &d1 , struct query &d2){
    int b1 = d1.l / sz;
    int b2 = d2.l / sz;
    if(b1 != b2){
        return b1 < b2;
    }
    else{
        return (b1 & 1)?d1.r < d2.r : d1.r > d2.r ;
    }
}

inline void add(int x){      // will change accroding to the problem requirments.
    cur -= 1LL * freq[x] * freq[x] * x;
    freq[x]++;
    cur += 1LL * freq[x] * freq[x] * x;
}

inline void remove(int x){
    cur -= 1LL * freq[x]*freq[x] *x;
    freq[x]--;
    cur += 1LL * freq[x] * freq[x] *x;
}
void mo(){
    sort(qr+1,qr+q+1,rule);
    int l = 1,r = 0;
    cur = 0;
    for(int i = 1;i<=q;++i){
        while(l < qr[i].l)remove(a[l++]);
        while(l > qr[i].l)add(a[--l]);
        while(r < qr[i].r)add(a[++r]);
        while(r > qr[i].r)remove(a[r--]);
        ans[qr[i].id] = cur;
    }
}











problem link :
https://codeforces.com/contest/86/problem/D

video editorial link :
https://www.youtube.com/watch?v=-HSeAFhc3NQ&list=PL2q4fbVm1Ik7Ds5cuaoOmExjOQG31kM-p&index=5&t=0s

help : 
AG git hub

my_solution :
https://codeforces.com/contest/86/submission/80258469

problem Link 2 :(spoj) Dquery.
https://www.spoj.com/problems/DQUERY/

video editorial link :
https://www.youtube.com/watch?v=aZG0I9MM03s&list=PL2q4fbVm1Ik7Ds5cuaoOmExjOQG31kM-p&index=4&t=0s





